# first call: check whether the directory is there

POST stat HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 45

[ "xtreemfs\/xtreemos", false, false, false ]HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 202

{"fileId":"0004760EDB989891BD4774E2:36227","posixAccessMode":509,"groupId":"users","atime":1204552700,"objType":2,"ownerId":"bjko","linkCount":1,"epoch":0,"mtime":1225297218,"ctime":1227258637,"size":0}

# second call: create a new file
#
# A capability is returned, because it's actually an 'open' call
# w/ O_CREAT flag - this is translated into a 'create' call on the
# MRC w/ 'open' flag. If the file was already there, there would be
# an 'open' call.
# remark: It's a bug in the server that 'null' is returned; instead,
# content-length should be 0. This will be changed w/ the new MRC 
# implementation coming soon, but the current client implementation
# crashes if there is no HTTP response body.
POST createFile HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 57

[ "xtreemfs\/xtreemos\/file.txt", { }, { }, 33188, true ]HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 4
X-Capability: ["0004760EDB989891BD4774E2:400964","w",1232532119,"*",0,"583B0B599F428FAC3CE4FC01741B0088"]
X-Locations: [[[{"width":2,"policy":"RAID0","stripe-size":512},["http:\/\/host2.zib.de:32641","http:\/\/host1:32641"]]],1]

null

# I don't have a clue what this call is good for...
POST removeXAttrs HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 61

[ "xtreemfs\/xtreemos\/file.txt", [ "security.capability" ] ]HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 4

null

# this call is not needed either, because access checks are implicitly performed by the operations
POST checkAccess HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 29

[ "xtreemfs\/xtreemos", "r" ]HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 4

true

# check whether the file exists already
POST stat HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 55

[ "xtreemfs\/xtreemos\/file.txt", false, false, false ]HTTP/1.1 420 
Content-Type: text/plain; charset=UTF-8
Content-Length: 210

{"errorMessage":"file or directory 'file.txt' does not exist (errno=2)","exceptionName":"org.xtreemfs.mrc.brain.UserException: file or directory 'file.txt' does not exist (errno=2)","errno":2,"stackTrace":null}

# no clue what this is good for...
POST getXAttr HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 57

[ "xtreemfs\/xtreemos\/file.txt", "security.capability" ]HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 6

"null"

# this may come from FUSE, I don't know...
POST checkAccess HTTP/1.1
Host: host1:32636
Connection: TE
TE: trailers
Authorization: { "mechanism": "nullauth", "guid": "stender", "ggids": [ "users" ] }
Content-Length: 29

[ "xtreemfs\/xtreemos", "r" ]HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 4

true