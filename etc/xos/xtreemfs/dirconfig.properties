# optional debug level
# 0: emergency
# 1: alert
# 2: critical
# 3: error
# 4: warning
# 5: notice
# 6: info (default)
# 7: debug
#debug.level = 6

# optional debug categories - a space or comma-separated list of log message categories
# all (default) - enable logging for all categories
# lifecycle     - log messaages pertaining to service lifecycles (threads)
# buffer        - logs messages pertaining to buffers
# net           - network-related log messages
# auth          - authorization-related log messages
# stage         - log messages pertaining to the request flow through the stages
# proc          - log messages pertaining to any kind of request processing
# db            - log messages pertaining storage on OSD or database access on MRC/DIR
# replication   - logs messages pertaining to replication 
# misc          - any other log messages
#debug.categories = all

# port for the service to listen on
listen.port = 32638

# port for the status page (HTTP server)
http_port = 30638

# optional address for network device ("any" if not specified)
# listen.address = 127.0.0.1

# specify whether SSL is required
ssl.enabled = false

# server credentials for SSL handshakes
ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/ds.p12
ssl.service_creds.pw = xtreemfs
ssl.service_creds.container = pkcs12

# trusted certificates for SSL handshakes
ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/xosrootca.jks
ssl.trusted_certs.pw = xtreemfs
ssl.trusted_certs.container = jks

# administrator password for privileged operations
#admin_password = passphrase

uuid = default-DIR

# ############################# #
# BABUDB DATABASE CONFIGURATION #
# ############################# #

# name for the database configuration file
#db.cfgFile = config.db

# base directory to store database index snapshots in
db.baseDir = /var/lib/xtreemfs/dir/database

# directory in which the database logs are stored
db.logDir = /var/lib/xtreemfs/dir/database

# SyncMode the synchronization mode to use for the logFile
# ASYNC - asynchronously write log entries (data is lost when system crashes).
# FSYNC - executes an fsync on the logfile before acknowledging the operation.
# FDATASYNC
# SYNC_WRITE - synchronously writes the log entry to disk before ack. Does not
#                          update the metadata.
# SYNC_WRITE_METADATA - synchronously writes the log entry to disk and updates
#                                               the metadata before ack.
db.sync = FSYNC

# max queue length: if > 0, the queue for each worker is limited to maxQ
worker.maxQueueLength = 250

# number of worker threads to use
worker.numThreads = 0

# a checkpoint is generated ,if maxLogfileSize is exceeded
db.maxLogfileSize = 16777216

# interval between two checks in seconds, 0 disables auto checkPointing
db.checkInterval = 300

# if set to a value > 0, operations are acknowledged immediately before
# they are written to the disk log. The disk logger will do batch writes
# and call fSync... every pseudoSyncWait seconds. This can be used to
# increase performance and emulate PostgreSQL behavior.
db.pseudoSyncWait = 200
