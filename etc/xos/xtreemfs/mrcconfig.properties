# optional debug level
# 0: emergency
# 1: alert
# 2: critical
# 3: error
# 4: warning
# 5: notice
# 6: info (default)
# 7: debug
#debug.level = 6

# optional debug categories - a space or comma-separated list of log message categories
# all (default) - enable logging for all categories
# lifecycle     - log messaages pertaining to service lifecycles (threads)
# buffer        - logs messages pertaining to buffers
# net           - network-related log messages
# auth          - authorization-related log messages
# stage         - log messages pertaining to the request flow through the stages
# proc          - log messages pertaining to any kind of request processing
# db            - log messages pertaining storage on OSD or database access on MRC/DIR
# replication   - logs messages pertaining to replication 
# misc          - any other log messages
#debug.categories = all

# port for the service to listen on
listen.port = 32636

# port for the status page (HTTP server)
http_port = 30636

# optional address for network device, "any" if not specified
# listen.address = 127.0.0.1

# interval for querying the Directory Service for new OSDs
osd_check_interval = 10

# Directory Service endpoint
dir_service.host = localhost
dir_service.port = 32638

# directory for append log
database.log = /var/lib/xtreemfs/mrc/db-log

# directory for volume databases
database.dir = /var/lib/xtreemfs/mrc/database

# specify whether access time stamps are updated
no_atime = true

# granularity of the local clock (in ms)
local_clock_renewal = 50

# interval between two remote clock syncs (in ms)
remote_time_sync = 60000

# specify whether SSL is required
ssl.enabled = false

# server credentials for SSL handshakes
ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/mrc.p12
ssl.service_creds.pw = xtreemfs
ssl.service_creds.container = pkcs12

# trusted certificates for SSL handshakes
ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/xosrootca.jks
ssl.trusted_certs.pw = xtreemfs
ssl.trusted_certs.container = jks

# Authentication providers are used to retrieve the user identities
# from the client or from certificate.
# The default provider is org.xtreemfs.mrc.auth.NullAuthProvider, which just
# takes the information provided by the client. The name of a pluggable
# provider can be used here.
authentication_provider = org.xtreemfs.common.auth.NullAuthProvider

# Optional directory containing deployable MRC policy implementations.
# Policies can be directly deployed as .java or .class files in this directory
# or one of its subdirectories. They will be compiled at startup time and
# loaded at runtime. Policies may have external dependencies that can be
# deployed either as .java, .class or .jar files. While Java and Class files
# may be located in subdirectories, JAR files mustn't. So far, pluggable
# policies have to inherit from either org.xtreemfs.mrc.ac.FileAccessPolicy,
# org.xtreemfs.mrc.osdstatus.OSDSelectionPolicy, or
# org.xtreemfs.common.auth.AuthenticationProvider. Policies identified by
# policy IDs (OSDSelectionPolicy and FileAccessPolicy) require a public static
# long field called POLICY_ID that assigns the policy a unique number.
policy_dir = /etc/xos/xtreemfs/policies

# Shared secret between the MRC and all OSDs.
# The secret is used by the MRC to sign capabilities, i.e. security tokens for
# data access at OSDs. In turn, an OSD uses the secret to verify that the
# capability has been issued by the MRC. The shared secret will be replaced by
# a public key infrastructure in future releases.
capability_secret = secretPassphrase

# administrator password for privileged operations
#admin_password = passphrase

# UUID for the OSD
uuid = default-MRC
