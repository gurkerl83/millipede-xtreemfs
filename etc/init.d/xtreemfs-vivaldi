#!/bin/sh

### BEGIN INIT INFO
# Provides:          xtreemfs-vivaldi
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     3 4 5
# Default-Stop:
# Short-Description: XtreemFS client vivaldi module
# Description:       XtreemFS client vivaldi process http://www.xtreemfs.org/
### END INIT INFO

# Source function library.
if [ -e /lib/lsb/init-functions ]
then
	. /lib/lsb/init-functions
else
	. /etc/init.d/functions
fi

LOCKDIR=/var/lock/subsys
LOCKFILE=$LOCKDIR/xtreemfs-vivaldi

XTREEMFS_USER=xtreemfs

PID_DS=/var/run/xtreemfs_vivaldi.pid

DEFAULT_DIR=/etc/xos/xtreemfs/default_dir

LOG_DS=/var/log/xtreemfs/vivaldi.log

COORD_FILE=/var/lib/xtreemfs/vivaldi_coordinates


pre_check() {

        exists=`grep -c $XTREEMFS_USER /etc/passwd`
        if [ $exists -eq 0 ]
        then
                echo "user $XTREEMFS_USER does not exist."
                exit 1
        fi
        dir=`dirname $LOG_DS`
        if [ ! -e $dir ]
        then
                echo "directory for logfiles $dir does not exist"
        fi
        if [ ! -e $DEFAULT_DIR ]
        then
                echo "deafult dir must be specified in $DEFAULT_DIR"
                exit 1
        fi
}

start() {
    if [ -f $LOCKFILE ]
    then
	echo -n "XtreemFS client vivaldi module already started"
	echo
        return 0
    fi

    pre_check
    
    dirport=`grep -e 'dir_service.port' $DEFAULT_DIR | cut -d '=' -f 2`
    dirhost=`grep -e 'dir_service.host' $DEFAULT_DIR | cut -d '=' -f 2`

    chown xtreemfs $LOG_DS
    echo >> $LOG_DS
    date >> $LOG_DS
    echo -e "Starting XtreemFS vivaldi module...\n\n" >> $LOG_DS

    rm $PID_DS
    echo -n "starting XtreemFS vivaldi module..."
    sudo -u $XTREEMFS_USER /usr/bin/xtfs_vivaldi ${dirhost// /}:${dirport// /} $COORD_FILE >> $LOG_DS 2>&1 &
    PROCPID=$!
    echo $PROCPID > $PID_DS
    sleep 1s

    if [ -e /proc/$PROCPID ]
    then
	echo
    else
	echo
	return 1
    fi

    if [ ! -d $LOCKDIR ]; then mkdir -p $LOCKDIR; fi
    touch $LOCKFILE
    return 0
}

stop() {
    if [ -f $PID_DS ]
    then
        echo -n "stopping XtreemFS vivaldi module..."
        killproc -p $PID_DS xtfs_vivaldi
	echo
    fi

    rm -f $LOCKFILE
    return 0
}

status() {
    if [ -f $PID_DS ]
    then
        PROCPID=`cat $PID_DS`
	if [ ! -e /proc/$PROCPID ]
	then
		echo "XtreemFS vivaldi module has crashed"
		return 1
	else
		echo "XtreemFS vivaldi module is running"
		return 0
	fi
    else
	echo "XtreemFS vivaldi module is not running"
	return 3
    fi
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    reload)
        ;;
    restart)
        stop
        sleep 1
        start
        ;;
    *)
        echo -e "Usage: $0 {start|stop|restart|reload|status}\n"
	return 1
        ;;
esac

exit 0

