#include "constants.idl"
#include "types.idl"


module org # 1000
{
  module xtreemfs # 0
  {
    module interfaces # 0
    {
      // Types
      struct AddressMapping # 30
      {
        string uuid;
        uint64_t version;
        string protocol;
        string address;
        uint16_t port;
        string match_network;
        uint32_t ttl_s;
	      string uri;
      };

      typedef sequence<AddressMapping> AddressMappingSet # 31;

      typedef map<string, string> ServiceDataMap # 32;

      enum ServiceType
      {
        SERVICE_TYPE_MRC = 1,
        SERVICE_TYPE_OSD = 2,
        SERVICE_TYPE_VOLUME = 3
      };

      struct Service # 34
      {
        ServiceType type;
        string uuid;
        uint64_t version;        
        string name;
        uint64_t last_updated_s;
        ServiceDataMap data;
      };

      typedef sequence<Service> ServiceSet # 35;


      interface DIRInterface # 100
      {
        // Constants
        const uint32_t DEFAULT_ONCRPC_PORT = 32638;
        const uint32_t DEFAULT_ONCRPCS_PORT = 32638;
        const uint32_t DEFAULT_HTTP_PORT = 30638; 

        // Exceptions
        exception ConcurrentModificationException # 6 { string stack_trace; };
        exception InvalidArgumentException # 8 { string error_message; };
        exception ProtocolException # 9 { uint32_t accept_stat; uint32_t error_code; string stack_trace; };
         
        // Operations
        void xtreemfs_address_mappings_get( string uuid, out AddressMappingSet address_mappings ) # 1;
        void xtreemfs_address_mappings_remove( string uuid ) # 3;
        uint64_t xtreemfs_address_mappings_set( AddressMappingSet address_mappings ) # 2;

        void xtreemfs_checkpoint() # 50;

        uint64_t xtreemfs_global_time_s_get() # 8;

        void xtreemfs_service_get_by_type( ServiceType type, out ServiceSet services ) #6;
        void xtreemfs_service_get_by_uuid( string uuid, out ServiceSet services ) # 7;
	      void xtreemfs_service_get_by_name( string name, out ServiceSet services ) # 9;
        uint64_t xtreemfs_service_register( Service service ) # 4;
        void xtreemfs_service_deregister( string uuid ) # 5;
	      void xtreemfs_service_offline( string uuid ) #10;

        void xtreemfs_shutdown() # 51;
      };
    };
  };
};
