#include "constants.idl"
#include "types.idl"


module org
{
  module xtreemfs # 2010030916
  {
    module interfaces
    {
      // Types
      struct AddressMapping # 30
      {
        string uuid;
        uint64_t version;
        string protocol;
        string address;
        uint16_t port;
        string match_network;
        uint32_t ttl_s;
        string uri;
      };

      typedef sequence<AddressMapping> AddressMappingSet # 31;

      struct DirService #36
      {
        string address;
        uint16_t port;
        string protocol;
        uint32_t interface_version;
      };

      typedef map<string, string> ServiceDataMap # 32;

      enum ServiceType
      {
        SERVICE_TYPE_MIXED = 0, // SERVICE_TYPE_ALL is a macro on Win32
        SERVICE_TYPE_MRC = 1,
        SERVICE_TYPE_OSD = 2,
        SERVICE_TYPE_VOLUME = 3
      };

      struct Service # 34
      {
        ServiceType type;
        string uuid;
        uint64_t version;        
        string name;
        uint64_t last_updated_s;
        ServiceDataMap data;
      };

      typedef sequence<Service> ServiceSet # 35;


      interface DIRInterface # 100
      {
        // Constants
        const uint32_t HTTP_PORT_DEFAULT = 30638; 
        const uint32_t ONC_RPC_PORT_DEFAULT = 32638;
         
        // Operations
        void xtreemfs_address_mappings_get( string uuid, out AddressMappingSet address_mappings ) # 1;
        void xtreemfs_address_mappings_remove( string uuid ) # 2;
        uint64_t xtreemfs_address_mappings_set( AddressMappingSet address_mappings ) # 3;
        void xtreemfs_checkpoint() # 4;
        void xtreemfs_discover_dir( out DirService dir_service) # 5;
        uint64_t xtreemfs_global_time_s_get() # 6;
        void xtreemfs_service_deregister( string uuid ) # 12;
        void xtreemfs_service_get_by_name( string name, out ServiceSet services ) # 10;
        void xtreemfs_service_get_by_type( ServiceType type, out ServiceSet services ) #8;
        void xtreemfs_service_get_by_uuid( string uuid, out ServiceSet services ) # 9;
        void xtreemfs_service_offline( string uuid ) # 13;
        uint64_t xtreemfs_service_register( Service service ) # 11;
        void xtreemfs_shutdown() # 14;

        // Exceptions
        exception ConcurrentModificationException # 20 { string stack_trace; };
        exception DIRException # 23 { uint32_t error_code; string error_message; string stack_trace; };
        exception InvalidArgumentException # 21 { string error_message; };
        exception ProtocolException # 22 { uint32_t accept_stat; uint32_t error_code; string stack_trace; };
        exception RedirectException # 24 { string address; uint16_t port; };
      };
    };
  };
};
