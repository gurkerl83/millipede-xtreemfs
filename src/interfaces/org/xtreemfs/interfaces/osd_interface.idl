#include "constants.idl"
#include "mrc_osd_types.idl"


module org # 1000
{
  module xtreemfs # 0
  {
    module interfaces # 0
    {
      struct InternalGmax # 50
      {
        uint64_t epoch;
        uint64_t last_object_id;
        uint64_t file_size;
      };

      struct Lock # 54
      {
        string client_uuid;
        uint32_t client_pid;
      };

      struct ObjectData # 51
      {
        uint32_t checksum;
        boolean invalid_checksum_on_osd;
        uint32_t zero_padding;
        buffer data;
      };

      struct ObjectList # 55
      {
        // serialized datatype
        buffer set;
        uint32_t stripeWidth;
        uint32_t firstObjectNo;
      };

      typedef sequence<ObjectList> ObjectListSet # 56;

      struct InternalReadLocalResponse # 52
      {
        ObjectData data;
        // serialized datatype
        ObjectListSet object_set;
      };

      struct VivaldiCoordinates # 53
      {
         double x_coordinate;
         double y_coordinate;
         double local_error;
      };


      interface OSDInterface # 300
      {
        // Constants
        const uint32_t DEFAULT_ONCRPC_PORT = 32640;
        const uint32_t DEFAULT_ONCRPCS_PORT = 32640;
        const uint32_t DEFAULT_HTTP_PORT = 30640; 

        // Exceptions
        exception ConcurrentModificationException # 1 { string stack_trace; };
        exception errnoException # 2 { uint32_t error_code; string error_message; string stack_trace; };
        exception InvalidArgumentException # 3 { string error_message; };
        exception OSDException # 4 { uint32_t error_code; string error_message; string stack_trace; };
        exception ProtocolException # 5 { uint32_t accept_stat; uint32_t error_code; string stack_trace; };
        exception RedirectException # 6 { string to_uuid; };

        // FUSE/POSIX operations
        void read( FileCredentials file_credentials, string file_id, uint64_t object_number, uint64_t object_version, uint32_t offset, uint32_t length, out ObjectData object_data ) # 10;
        void truncate( FileCredentials file_credentials, string file_id, uint64_t new_file_size, out OSDWriteResponse osd_write_response ) # 11;
        void unlink( FileCredentials file_credentials, string file_id ) # 12;
        void write( FileCredentials file_credentials, string file_id, uint64_t object_number, uint64_t object_version, uint32_t offset, uint64_t lease_timeout, ObjectData object_data, out OSDWriteResponse osd_write_response ) # 13;

        // XtreemFS-specific operations
      	void xtreemfs_broadcast_gmax( string file_id, uint64_t truncateEpoch, uint64_t lastObject, uint64_t fileSize ) # 20;
        ObjectData xtreemfs_check_object( FileCredentials file_credentials, string file_id, uint64_t object_number, uint64_t object_version) # 21;

        void xtreemfs_cleanup_get_results( out StringSet results ) # 30;
        void xtreemfs_cleanup_is_running( out boolean is_running ) # 31;
        void xtreemfs_cleanup_start( boolean remove_zombies, boolean remove_unavail_volume, boolean lost_and_found ) # 32;
        void xtreemfs_cleanup_status( out string status ) # 33;
        void xtreemfs_cleanup_stop() # 34;
	
        InternalGmax xtreemfs_internal_get_gmax( FileCredentials file_credentials, string file_id ) # 40;
        void xtreemfs_internal_truncate( FileCredentials file_credentials, string file_id, uint64_t new_file_size, out OSDWriteResponse osd_write_response ) # 41;
        uint64_t xtreemfs_internal_get_file_size( FileCredentials file_credentials, string file_id ) # 42;
        InternalReadLocalResponse xtreemfs_internal_read_local( FileCredentials file_credentials, string file_id, uint64_t object_number, uint64_t object_version, uint64_t offset, uint64_t length, boolean attachObjectList, ObjectListSet requiredObjects) # 43;
        ObjectList xtreemfs_internal_get_object_set( FileCredentials file_credentials, string file_id) # 44;

        Lock xtreemfs_lock_acquire( FileCredentials file_credentials, string client_uuid, int32_t client_pid, string file_id, uint64_t offset, uint64_t length, boolean exclusive ) # 50;
        Lock xtreemfs_lock_check( FileCredentials file_credentials, string client_uuid, int32_t client_pid, string file_id, uint64_t offset, uint64_t length, boolean exclusive ) # 51;
        void xtreemfs_lock_release( FileCredentials file_credentials, string file_id, Lock lock ) # 52;

        void xtreemfs_ping( VivaldiCoordinates coordinates, out VivaldiCoordinates remote_coordinates ) # 60;

        void xtreemfs_shutdown() # 70;
      };
    };
  };
};
