// See doc/idl_conventions.txt before modifying this file.

#include "types.idl"


module org
{
  module xtreemfs # 2010030916
  {
    module interfaces
    {
      enum AccessControlPolicyType
      {
        ACCESS_CONTROL_POLICY_NULL = 1,
        ACCESS_CONTROL_POLICY_POSIX = 2,
        ACCESS_CONTROL_POLICY_VOLUME = 3
      };

      struct NewFileSize # 11
      {
        uint64_t size_in_bytes;
        uint32_t truncate_epoch;
      };

      typedef sequence<NewFileSize> NewFileSizeSet # 12;

      enum OSDSelectionPolicyType
      {
        OSD_SELECTION_POLICY_FILTER_DEFAULT = 1000,
        OSD_SELECTION_POLICY_FILTER_FQDN = 1001,
        OSD_SELECTION_POLICY_FILTER_UUID = 1002,
        OSD_SELECTION_POLICY_GROUP_DCMAP = 2000,
        OSD_SELECTION_POLICY_GROUP_FQDN = 2001,
        OSD_SELECTION_POLICY_SORT_DCMAP = 3000,
        OSD_SELECTION_POLICY_SORT_FQDN = 3001,
        OSD_SELECTION_POLICY_SORT_RANDOM = 3002,
        OSD_SELECTION_POLICY_SORT_VIVALDI = 3003
      };
      
      enum ReplicaSelectionPolicyType
      {
        REPLICA_SELECTION_POLICY_SIMPLE = 1
      };
      
      enum SnapConfig
      {
      	SNAP_CONFIG_SNAPS_DISABLED = 0,
      	SNAP_CONFIG_ACCESS_CURRENT = 1,
      	SNAP_CONFIG_ACCESS_SNAP = 2
      };

      struct OSDWriteResponse # 17
      {
        NewFileSizeSet new_file_size;
      };

      enum StripingPolicyType
      {
        STRIPING_POLICY_RAID0 = 0
      };

      struct StripingPolicy # 19
      {
        StripingPolicyType type;
        uint32_t stripe_size;
        uint32_t width;
      };

      struct Replica # 20
      {
        StringSet osd_uuids;
        uint32_t replication_flags;
        StripingPolicy striping_policy;
      };

      typedef sequence<Replica> ReplicaSet # 21;

      struct VivaldiCoordinates # 22
      {
         double x_coordinate;
         double y_coordinate;
         double local_error;
      };

      struct XCap # 23
      {
        uint32_t access_mode;
        string client_identity;
        uint64_t expire_time_s;
        uint32_t expire_timeout_s;
        string file_id;
        boolean replicate_on_close;
        string server_signature;
        uint32_t truncate_epoch;
        SnapConfig snap_config;
        uint64_t snap_timestamp;
      };

      struct XLocSet # 24
      {
        uint64_t read_only_file_size; // used internally for read-only replication
        ReplicaSet replicas;
        string replica_update_policy;
        uint32_t version;        
      };

      struct FileCredentials # 25
      {
        XCap xcap;
        XLocSet xlocs;
      };

      typedef sequence<FileCredentials> FileCredentialsSet # 26;
    };
  };
};
