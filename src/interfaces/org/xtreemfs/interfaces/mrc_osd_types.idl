#include "types.idl"


module org
{
  module xtreemfs # 2009090209
  {
    module interfaces
    {
      enum AccessControlPolicyType
      {
        ACCESS_CONTROL_POLICY_NULL = 1,
        ACCESS_CONTROL_POLICY_POSIX = 2,
        ACCESS_CONTROL_POLICY_VOLUME = 3
      };

      struct NewFileSize # 11
      {
        uint64_t size_in_bytes;
        uint32_t truncate_epoch;
      };

      typedef sequence<NewFileSize> NewFileSizeSet # 12;

      struct OSDtoMRCData # 13
      {
        uint8_t caching_policy;
        string data;
      };

      typedef sequence<OSDtoMRCData> OSDtoMRCDataSet # 14;

      enum OSDSelectionPolicyType
      {
        OSD_SELECTION_POLICY_FILTER_DEFAULT = 1000,
        OSD_SELECTION_POLICY_FILTER_FQDN = 1001,
        OSD_SELECTION_POLICY_GROUP_DCMAP = 2000,
        OSD_SELECTION_POLICY_GROUP_FQDN = 2001,
        OSD_SELECTION_POLICY_SORT_RANDOM = 3000,
        OSD_SELECTION_POLICY_SORT_DCMAP = 3001,
        OSD_SELECTION_POLICY_SORT_FQDN = 3002
      };
      
      enum ReplicaSelectionPolicyType
      {
        REPLICA_SELECTION_POLICY_SIMPLE = 1
      };

      struct OSDWriteResponse # 17
      {
        NewFileSizeSet new_file_size;
        OSDtoMRCDataSet opaque_data;
      };

      enum StripingPolicyType
      {
        STRIPING_POLICY_RAID0 = 0
      };

      struct StripingPolicy # 19
      {
        StripingPolicyType type;
        uint32_t stripe_size;
        uint32_t width;
      };

      struct Replica # 20
      {
        StripingPolicy striping_policy;
        uint32_t  replication_flags;
        StringSet osd_uuids;
      };

      typedef sequence<Replica> ReplicaSet # 21;

      struct VivaldiCoordinates # 22
      {
         double x_coordinate;
         double y_coordinate;
         double local_error;
      };

      struct XCap # 23
      {
        string file_id;
        uint32_t access_mode;
        uint64_t expires_s;
        string client_identity;
        uint32_t truncate_epoch;
        boolean replicateOnClose;
        string server_signature;
      };

      struct XLocSet # 24
      {
        ReplicaSet replicas;
        uint32_t   version;
        string     repUpdatePolicy;
        //used internally for read-only replication
        uint64_t   read_only_file_size;
      };

      struct FileCredentials # 25
      {
        XLocSet xlocs;
        XCap    xcap;
      };

      typedef sequence<FileCredentials> FileCredentialsSet # 26;
    };
  };
};
