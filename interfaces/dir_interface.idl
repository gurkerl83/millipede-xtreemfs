module xtreemfs
{
  module interfaces
  {
    const uint16_t SERVICE_TYPE_MRC = 1;
    const uint16_t SERVICE_TYPE_OSD = 2;
    const uint16_t SERVICE_TYPE_VOLUME = 3;

    struct AddressMapping
    {
      string uuid;
      uint64_t version;
      string protocol;
      string address;
      uint16_t port;
      string match_network;
      uint32_t ttl;
    };

    typedef sequence<AddressMapping> AddressMappingSet;

    struct KeyValuePair
    {
     string key;
     string value;
    };

    typedef sequence<KeyValuePair> KeyValuePairSet;

    struct ServiceRegistry 
    {
      string uuid;
      uint64_t version;
      uint16_t service_type;
      string   service_name;
      KeyValuePairSet data;
    };

    typedef sequence<ServiceRegistry> ServiceRegistrySet;

    interface DIRInterface # 1
    {
      void getAddressMappings( string uuid, out AddressMappingSet address_mappings ) # 1;
      //throws a ConcurrentModificationException if the entry was modified by another process
      uint64_t setAddressMappings( AddressMappingSet address_mappings ) # 2;
      void deleteAddressMappings( string uuid ) # 3;
      //throws a ConcurrentModificationException if the entry was modified by another process
      uint64_t registerService( ServiceRegistry service ) # 4;
      void     deregisterService( string uuid ) # 5;
      void     getServicesByType( uint16_t type, out ServiceRegistrySet services) # 6;
      void     getServiceByUuid( string uuid, out ServiceRegistrySet services) # 7;
      uint64_t getGlobalTime() # 8;
    };
  };
};
