#  Copyright (c) 2007, 2008  Matthias Hess, Erich Focht
#  This file is part of XtreemFS.
#
#  XtreemFS is part of XtreemOS, a Linux-based Grid Operating
#  System, see <http://www.xtreemos.eu> for more details. The
#  XtreemOS project has been developed with the financial support
#  of the European Commission's IST program under contract
#  #FP6-033576.
#
#  XtreemFS is free software: you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation, either version 2 of
#  the License, or (at your option) any later version.
#
#  XtreemFS is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of 
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with XtreemFS.  If not, see <http://www.gnu.org/licenses/>.

ARCH := $(shell uname -i)

# libraries are in lib64 on certain architectures
ARCHLIB64 = x86_64
ifneq (,$(findstring $(ARCH),$(ARCHLIB64)))
LIBBASE = lib64
else
LIBBASE = lib
endif

PROT_VERSION = 2
# NO_DEBUG     = y
# LIGHT_DEBUG  = y
# PROFILING    = y
XTREEMOS_ENV = n
# ITAC = yes

#
# for building neon you'll need expat, zlib and openssl devel packages
#
NEON_BASEDIR          = $(TOPDIR)/neon-0.27.2
NEON_INCDIR           = $(NEON_BASEDIR)/src
NEON_CC_INCS          = -I$(NEON_INCDIR)
NEON_LIBDIR           = $(NEON_BASEDIR)/src/.libs
NEON_CC_LIBS          = -L$(NEON_LIBDIR) -lneon
NEON_CC_STATIC_LIBS   = -L$(NEON_LIBDIR) -lneon
NEON_CC_PARTSH_LIBS   = -lssl


JSON_BASEDIR          = $(TOPDIR)/json-c-0.7
JSON_INCDIR           = $(JSON_BASEDIR)
JSON_LIBDIR           = $(JSON_BASEDIR)/.libs
JSON_CC_INCS          = -I$(JSON_INCDIR)
JSON_CC_STATIC_LIBS   = -L$(JSON_LIBDIR) -ljson

FUSE_BASEDIR     = /usr
FUSE_CC_FLAGS    = -D_FILE_OFFSET_BITS=64 -DFUSE_USE_VERSION=26 -I$(FUSE_BASEDIR)/include
FUSE_CC_LIBS     = -L$(FUSE_BASEDIR) -lfuse

LIBACL_CC_FLAGS  =
LIBACL_CC_LIBS   = -lacl

ITAC_BASEDIR     = /opt/intel/itac/7.1
ITAC_INCDIR      = $(ITAC_BASEDIR)/include
ITAC_LIBDIR      = $(ITAC_BASEDIR)/lib
ITAC_CC_FLAGS    = -g -finstrument-functions
ITAC_CC_INCS     = -I$(ITAC_INCDIR)
ITAC_CC_LIBS     = -L$(ITAC_LIBDIR) -lVTcs -lvtunwind -ldwarf -lelf -lpthread -lm

KERNEL_VERSION   = $(shell uname -r)
KERNEL_BASEDIR   = /lib/modules/$(KERNEL_VERSION)/build
KERNEL_INCDIR    = $(KERNEL_BASEDIR)/include
KERNEL_CC_INCS   = -I$(KERNEL_INCDIR)

XTREEMOS_BASEDIR = /opt/xtreemos-arg
XTREEMOS_LIBDIR  = $(XTREEMOS_BASEDIR)/lib
XTREEMOS_INCDIR  = $(XTREEMOS_BASEDIR)/include
XTREEMOS_CC_INCS = -I$(XTREEMOS_INCDIR)
XTREEMOS_CC_LIBS = -L$(XTREEMOS_LIBDIR) -lxos_ams -lxos_comsec -lkeyutils -lssl


CURRENT_CC_INCS  = -I$(TOPDIR)/src

CC_FLAGS         = -Wall -D_GNU_SOURCE -pthread -DPROT_VERSION=$(PROT_VERSION)
CC_LDFLAGS       = -pthread

ifeq ($(NO_DEBUG),y)
CC_FLAGS        += -O3 -funroll-loops -DNO_DEBUG -DNO_TRACE
CC_LDFLAGS      += -g
else
ifeq ($(LIGHT_DEBUG),y)
CC_FLAGS        += -O0 -g -DNO_DEBUG -DNO_TRACE
CC_LDFLAGS      += -g
else
CC_FLAGS        += -g -O0
CC_LDFLAGS      += -g -O0
endif
endif

ifdef PROFILING
CC_FLAGS        += -pg
CC_LDFLAGS      += -pg
endif

ifeq ($(XTREEMOS_ENV),y)
CC_FLAGS        += -DXTREEMOS_ENV
CC_INCS         += $(XTREEMOS_CC_INCS)
CC_LIBS         += $(XTREEMOS_CC_LIBS)
endif

ifdef ITAC
CC_LIBS         += $(ITAC_CC_LIBS)
endif

CC               = gcc
CC_LD            = gcc

 
#
# EF: Hack for building an executable which is partially statically linked
# with NEON, JSON, whatever, and dynamically linked with the standard libs
#
DEFAULT_CC_LIBS = -lrt -ldl -lc

# Usage: PARTST_LD <target> <objs> <static libs> <shared libs>
PARTST_LD = $(CC_LD) $(CC_LDFLAGS) -Wl,-r -nostartfiles -nostdlib -o $(1)_st \
	       $(2) $(3) && \
            $(CC_LD) $(CC_LDFLAGS) -o $(1) $(1)_st --begin-group $(4) $(DEFAULT_CC_LIBS) --end-group && \
            $(RM) $(1)_st
